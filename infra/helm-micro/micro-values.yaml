---
# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  replicaCount: 1
  environment:
  # list of key: value
  # GLOBAL1: value

## Set default image, imageTag, and imagePullPolicy.
## ref: https://hub.docker.com/r/apache/nifi/
##


image: skafoldcfg
imageConfig:
  repository:
  tag: "latest"
  pullPolicy: IfNotPresent

#command: ['echo pre-install Job Pod is Running']

replicaCount: 1

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

nameOverride: deployment
fullnameOverride: ""

# Annotation for the Deployment
annotations: {}

#ARGS: both works


# List of services
services:
  - name: web
    type: ClusterIP
    annotations: {}
    specs:
      - port: 3000
        targetPort: 3000
        name: port-svc

#targetPort: is the port the container accepts traffic on,
#port: is the abstracted Service port, which can be any port other pods use to access the Service
#https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.16/#serviceport-v1-core

environment:
  - name: NATS_URL
    valueFrom:
      configMapKeyRef:
        name: nats-configmap
        key: nats_url
  - name: NATS_CLUSTER_ID
    value: ticketing
  - name: NATS_CLIENT_ID
    valueFrom:
      fieldRef: metadata.name
  - name: REDIS_HOST
    valueFrom:
      configMapKeyRef:
        name: expiration-redis-configmap
        key: redis_host
  - name: MONGO_URI
    valueFrom:
      configMapKeyRef:
        name: tickets-mongo-configmap
        key: database_url
  - name: JWT_KEY
    valueFrom:
      secretKeyRef:
        name: jwt-secret
        key: JWT_KEY
  - name: STRIPE_KEY
    valueFrom:
      secretKeyRef:
        key: STRIPE_KEY
        name: stripe-secret

dbConfigMap: false
eventConfigMap: false
redisConfigMap: false

volumes:
  enabled: false
  pvc:
    enabled: false
    existing_claim:
    name: pvc
    mountPath: /pv
    size: 1G
    class:
    accessModes:
      - ReadWriteOnce

  configMaps:
#    - name: test
#      mountPath: /test
#      data:
#        test.conf: |
#          hello

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 2
    memory: 2000Mi
  requests:
    cpu: 500m
    memory: 500Mi