apiVersion: networking.k8s.io/v1beta1
kind: Ingress #kind of object
metadata:
  name: ingress-service
  annotations:
    kubernetes.io/ingress.class: nginx #create ingress controller based on nginx project
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - host: www.darefalola.com
      http:
        paths:
          - path: /api/payments/?(.*)
            backend:
              serviceName: payments-cluster-ip-service
              servicePort: 3000
          - path: /api/users/?(.*)
            backend:
              serviceName: auth-cluster-ip-service
              servicePort: 3000
          - path: /api/tickets/?(.*)
            backend:
              serviceName: tickets-cluster-ip-service
              servicePort: 3000
          - path: /api/orders/?(.*)
            backend:
              serviceName: orders-cluster-ip-service
              servicePort: 3000
          - path: /?(.*)
            backend:
              serviceName: client-cluster-ip-service
              servicePort: 3000
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: 'true'
    service.beta.kubernetes.io/do-loadbalancer-hostname: 'darefalola.com'
  labels:
    helm.sh/chart: ingress-nginx-2.0.3
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: 0.32.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller